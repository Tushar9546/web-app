{"ast":null,"code":"import * as types from \"./actionType\";\nconst initalState = {\n  isLoading: false,\n  isError: false,\n  isAuth: false\n};\nconst reducer = (state = initalState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case types.SIGNUP_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n        isError: false\n      };\n    case types.SIGNUP_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        isError: false\n      };\n    case types.SIGNUP_FAILURE:\n      return {\n        ...state,\n        isError: true,\n        isLoading: false\n      };\n    case types.LOGIN_REQUEST:\n      return {\n        ...state,\n        isError: false,\n        isLoading: true,\n        isAuth: false\n      };\n    case types.LOGIN_SUCCESS:\n      return {\n        ...state,\n        isError: false,\n        isLoading: false,\n        isAuth: true\n      };\n    case types.LOGIN_FAILURE:\n      return {\n        ...state,\n        isError: true,\n        isLoading: false,\n        isAuth: false\n      };\n    default:\n      return state;\n  }\n};\nexport { reducer };","map":{"version":3,"names":["types","initalState","isLoading","isError","isAuth","reducer","state","action","type","payload","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE"],"sources":["E:/New folder (2)/frontend/src/Redux/AuthRedux/reducer.js"],"sourcesContent":["import * as types from \"./actionType\";\r\n\r\nconst initalState = {\r\n    isLoading: false,\r\n    isError: false,\r\n    isAuth: false,\r\n}\r\n\r\nconst reducer = (state = initalState, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case types.SIGNUP_REQUEST:\r\n            return { ...state, isLoading: true, isError: false }\r\n        case types.SIGNUP_SUCCESS:\r\n            return { ...state, isLoading: false, isError: false }\r\n        case types.SIGNUP_FAILURE:\r\n            return { ...state, isError: true, isLoading: false }\r\n\r\n        case types.LOGIN_REQUEST:\r\n            return { ...state, isError: false, isLoading: true, isAuth: false, }\r\n        case types.LOGIN_SUCCESS:\r\n            return { ...state, isError: false, isLoading: false, isAuth: true, }\r\n        case types.LOGIN_FAILURE:\r\n            return { ...state, isError: true, isLoading: false, isAuth: false, }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport { reducer }"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,cAAc;AAErC,MAAMC,WAAW,GAAG;EAChBC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE,KAAK;EACdC,MAAM,EAAE;AACZ,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACC,KAAK,GAAGL,WAAW,EAAEM,MAAM,KAAK;EAC7C,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAChC,QAAQC,IAAI;IACR,KAAKR,KAAK,CAACU,cAAc;MACrB,OAAO;QAAE,GAAGJ,KAAK;QAAEJ,SAAS,EAAE,IAAI;QAAEC,OAAO,EAAE;MAAM,CAAC;IACxD,KAAKH,KAAK,CAACW,cAAc;MACrB,OAAO;QAAE,GAAGL,KAAK;QAAEJ,SAAS,EAAE,KAAK;QAAEC,OAAO,EAAE;MAAM,CAAC;IACzD,KAAKH,KAAK,CAACY,cAAc;MACrB,OAAO;QAAE,GAAGN,KAAK;QAAEH,OAAO,EAAE,IAAI;QAAED,SAAS,EAAE;MAAM,CAAC;IAExD,KAAKF,KAAK,CAACa,aAAa;MACpB,OAAO;QAAE,GAAGP,KAAK;QAAEH,OAAO,EAAE,KAAK;QAAED,SAAS,EAAE,IAAI;QAAEE,MAAM,EAAE;MAAO,CAAC;IACxE,KAAKJ,KAAK,CAACc,aAAa;MACpB,OAAO;QAAE,GAAGR,KAAK;QAAEH,OAAO,EAAE,KAAK;QAAED,SAAS,EAAE,KAAK;QAAEE,MAAM,EAAE;MAAM,CAAC;IACxE,KAAKJ,KAAK,CAACe,aAAa;MACpB,OAAO;QAAE,GAAGT,KAAK;QAAEH,OAAO,EAAE,IAAI;QAAED,SAAS,EAAE,KAAK;QAAEE,MAAM,EAAE;MAAO,CAAC;IACxE;MACI,OAAOE,KAAK;EACpB;AACJ,CAAC;AAED,SAASD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}